name: load-tests
on:
  push:
    branches: [main]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
    paths-ignore:
      - "**/README.md"
  workflow_dispatch:

env:
  # renovate: datasource=golang-version depName=go
  GO_VERSION: "1.23.6"

jobs:
  setup-environment:
    timeout-minutes: 30
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: false

      - name: Cache tools
        id: cache-tools
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: .tools
          key: load-test-tools-${{ runner.os }}-${{ hashFiles('internal/tools/go.sum') }}

      - name: Install tools
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          mkdir -p .tools
          make install-tools

      - name: Cache collector source code
        id: cache-collector-source
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: build
          key: load-test-build-${{ runner.os }}-${{ hashFiles('manifest.yaml', 'internal/confmap/provider/eecprovider') }}

      - name: Generate source files
        if: steps.cache-collector-source.outputs.cache-hit != 'true'
        run: make generate

      - name: Cache Go modules
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            internal/oteltestbedcol
            ~/go/bin
            ~/go/pkg/mod
          key: load-test-mods-${{ runner.os }}-${{ hashFiles('internal/oteltestbedcol/go.sum') }}

      - run: make oteltestbedcol

      - name: Upload Testbed Binaries
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: testbed-binaries
          path: ./bin/*

  loadtest:
    runs-on: "Linux-x64-16-64GB-Runner" # Ubuntu 24.04
    needs: [setup-environment]
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: false

      - name: Cache tools
        id: cache-tools
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: .tools
          key: load-test-tools-${{ runner.os }}-${{ hashFiles('internal/tools/go.sum') }}

      - name: Install tools
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          mkdir -p .tools
          touch .tools/*
          make install-tools

      - name: Create results folder
        run: mkdir -p results && touch results/TESTRESULTS.md

      - name: Download Testbed Binaries
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: testbed-binaries
          path: bin/

      - name: Make Testbed Binaries executable
        run: chmod +x bin/*

      - name: Loadtest
        run: make run-load-tests

      - name: Create Test Result Archive
        if: ${{ failure() || success() }}
        continue-on-error: true
        run: tar -cvf test_results_load-tests.tar internal/testbed/load/tests/results

      - name: Upload Test Results
        if: ${{ failure() || success() }}
        continue-on-error: true
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: test-result-archive-load-tests
          path: ./*.tar

      - name: Copy Benchmarks
        run: cp internal/testbed/load/tests/results/benchmarks.json internal/testbed/load/tests/results/load-tests.json

      - name: Upload benchmarks.json
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: benchmark-results-load-tests
          path: internal/testbed/load/tests/results/load-tests.json

  notify-slack:
    runs-on: ubuntu-24.04
    needs: [loadtest]
    if: failure() && github.event_name == 'push'
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@c33737706dea87cd7784c687dadc9adf1be59990 # v2.3.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: "DT OTel Collector Distro - Loadtest Failure"
          SLACK_COLOR: "failure"
          SLACK_USERNAME: "GitHub Actions Notifier"
          SLACK_ICON: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/github.png"

  update-benchmarks:
    runs-on: ubuntu-24.04
    needs: [loadtest]
    if: github.event_name == 'push'
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download Benchmark results
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: benchmark-results-*
          merge-multiple: true
          path: results

      - name: Normalize results
        run: jq -s 'map(.[])' results/*.json > output.json

      - name: Benchmark
        uses: benchmark-action/github-action-benchmark@d48d326b4ca9ba73ca0cd0d59f108f9e02a381c7 # v1.20.4
        with:
          tool: "customSmallerIsBetter"
          output-file-path: output.json
          gh-pages-branch: benchmarks
          max-items-in-chart: 100
          github-token: ${{ secrets.GITHUB_TOKEN }}
          benchmark-data-dir-path: "docs/benchmarks/loadtests"
          auto-push: true
