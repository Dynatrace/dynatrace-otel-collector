name: Build and Release

on:
  push:
    # run only against version tags
    tags:
      - 'v*'

env:
  # renovate: datasource=golang-version depName=go
  GO_VERSION: "1.24.4"
  # renovate: datasource=go depName=github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod
  CYCLONEDX_VERSION: "v1.9.0"
  # renovate: datasource=github-releases depName=goreleaser/goreleaser-pro
  GORELEASER_PRO_VERSION: v2.11.2

jobs:
  build:
    name: Release
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Validate version
        env:
          TAG_NAME: ${{ github.head_ref || github.ref_name }} 
        run: |
          # Remove leading 'v' from version
          export VERSION=$(echo -n ${TAG_NAME} | cut -c 2-)
          grep "version: ${VERSION}" manifest.yaml || (echo "value of 'dist.version' in manifest.yaml does not match tag version ${VERSION}, please update it" && exit 1)
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: arm64,ppc64le,s390x
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Install cyclonedx-gomod
        run: go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@${{ env.CYCLONEDX_VERSION }}
      - name: Cache tools
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: .tools
          key: release-tools-${{ runner.os }}-${{ hashFiles('internal/tools/go.sum') }}
      - name: Touch tools
        run: |
          mkdir -p .tools
      - name: Login to GitHub Package Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public

      - name: Extract changelog
        run: awk '/<!-- next version -->/,/<!-- previous-version -->/' CHANGELOG.md > ./release-notes.md

      - name: Free up disk space
        run: |
          df -h
          go clean -modcache -cache
          rm -r /opt/hostedtoolcache/CodeQL
          rm -r /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk
          rm -r /opt/hostedtoolcache/PyPy
          rm -r /opt/hostedtoolcache/Ruby
          rm -r /opt/hostedtoolcache/node
          df -h

      - name: Create release for version tag
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          args: release --clean --parallelism 1 --release-notes ${{ env.RELEASE_NOTES }}
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NOTES: "./release-notes.md"
