name: Build PR Snapshots

on:
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: "~1.21.3"
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - uses: docker/setup-buildx-action@v3
      - uses: anchore/sbom-action/download-syft@v0.17.0
      - name: Cache tools
        uses: actions/cache@v4
        with:
          path: .tools
          key: snapshot-tools-${{ runner.os }}-${{ hashFiles('internal/tools/go.sum') }}
      - name: Touch tools
        run: |
          mkdir -p .tools
          touch .tools/*
      - name: Create Snapshot for Pull Request
        run: make snapshot
      - name: Upload Pull Request Preview
        uses: actions/upload-artifact@v4
        with:
          name: otelcol_dynatrace_${{ github.event.pull_request.number }}_${{ github.run_number }}
          path: dist/*
      - name: Upload linux service packages
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: |
            dist/dynatrace-otel-collector_*_Linux_arm64.deb
            dist/dynatrace-otel-collector_*_Linux_arm64.rpm
            dist/dynatrace-otel-collector_*_Linux_x86_64.deb
            dist/dynatrace-otel-collector_*_Linux_x86_64.rpm
            dist/metadata.json

  linux-package-tests:
    name: Test Linux Packages
    runs-on: ubuntu-22.04
    needs: build
    strategy:
      matrix:
        os: ["deb", "rpm"]
        arch: ["x86_64"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download linux service packages
        uses: actions/download-artifact@v4
        with:
          name: linux-packages
          path: linux-packages
      - run: ls -la linux-packages
      - name: Parse metadata file
        id: parse-metadata
        run: |
          metadata=`cat ./linux-packages/metadata.json`
          echo "metadata=$metadata" >> "$GITHUB_OUTPUT"
      - name: Extract version number
        id: extract-version
        run: |
          echo "version=${{ fromJson(steps.parse-metadata.outputs.metadata).version }}" >> "$GITHUB_OUTPUT"
      - name: Test
        run: make package-test PACKAGE_PATH=linux-packages/dynatrace-otel-collector_${{ steps.extract-version.outputs.version }}_Linux_${{ matrix.arch }}.${{ matrix.os }}
