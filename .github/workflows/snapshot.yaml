name: Build PR Snapshots

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=golang-version depName=go
  GO_VERSION: "1.24.4"
  # renovate: datasource=github-releases depName=goreleaser/goreleaser-pro
  GORELEASER_PRO_VERSION: v2.11.2

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        goos: ["linux", "darwin"]
        goarch: ["amd64", "arm64", "ppc64le", "s390x"]
        exclude:
          - goos: darwin
            goarch: s390x
          - goos: darwin
            goarch: ppc64le
        include:
          - goos: windows
            goarch: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: "**/*.sum"

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        if: matrix.goarch != 'amd64'
        with:
          platforms: ${{ matrix.goarch }}

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Install tools
        run: |
          mkdir -p .tools
          make install-tools

      - name: Free up disk space
        run: |
          df -h
          rm -r /opt/hostedtoolcache/CodeQL
          rm -r /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk
          rm -r /opt/hostedtoolcache/PyPy
          rm -r /opt/hostedtoolcache/Ruby
          rm -r /opt/hostedtoolcache/node
          df -h

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          args: release --snapshot --clean --skip archive,sbom --fail-fast --split
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show produced artifacts
        run: ls -laR ./dist

      - if: always()
        name: Show FS usage (debugging)
        run: |
          df -h

      - name: Upload Pull Request Preview
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: otelcol_dynatrace_${{ matrix.goos }}_${{ matrix.goarch }}_${{ github.event.pull_request.number }}_${{ github.run_number }}
          path: dist/*

      - name: Upload linux service packages
        if: matrix.goarch == 'arm64' && matrix.goos == 'linux'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: linux-packages-arm64
          path: |
            dist/**/metadata.json
            dist/**/dynatrace-otel-collector_*_Linux_arm64.deb
            dist/**/dynatrace-otel-collector_*_Linux_arm64.rpm

      - name: Upload linux service packages
        if: matrix.goarch == 'amd64' && matrix.goos == 'linux'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: linux-packages-amd64
          path: |
            dist/**/metadata.json
            dist/**/dynatrace-otel-collector_*_Linux_x86_64.deb
            dist/**/dynatrace-otel-collector_*_Linux_x86_64.rpm

  linux-package-tests:
    name: Test Linux Packages
    runs-on: ubuntu-24.04
    needs: build
    strategy:
      matrix:
        os: ["deb", "rpm"]
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: arm64,ppc64le,s390x

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Download linux service packages
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: linux-packages-${{ matrix.arch }}
          path: linux-packages

      - name: Parse metadata file
        id: parse-metadata
        run: |
          metadata=`cat ./linux-packages/linux_${{ matrix.arch }}/metadata.json`
          # make single-line json out of multi-line json
          metadata="${metadata//$'\n'/''}"
          metadata="${metadata//$'\r'/''}"
          echo "metadata=$metadata" >> "$GITHUB_OUTPUT"

      - name: Extract version number
        id: extract-version
        run: echo "version=${{ fromJson(steps.parse-metadata.outputs.metadata).version }}" >> "$GITHUB_OUTPUT"

      - name: Test amd64
        if: matrix.arch == 'amd64'
        run: make package-test ARCH=${{ matrix.arch }} PACKAGE_PATH=linux-packages/linux_${{ matrix.arch }}/dynatrace-otel-collector_${{ steps.extract-version.outputs.version }}_Linux_x86_64.${{ matrix.os }}

      - name: Test arm64
        if: matrix.arch == 'arm64'
        run: make package-test ARCH=${{ matrix.arch }} PACKAGE_PATH=linux-packages/linux_${{ matrix.arch }}/dynatrace-otel-collector_${{ steps.extract-version.outputs.version }}_Linux_${{ matrix.arch }}.${{ matrix.os }}
